<?xml version="1.0" encoding="UTF-8"?>

<project name="MoodleTravisPluginInstall" description="Use targets from this Phing file for the 'install' section of the .travis.yml file.  Only call one target." default="Install">
    <property name="MOODLE_BRANCH" value="${env.MOODLE_BRANCH}" description="The Moodle git branch to clone"/>
    <property name="COMPONENT_DIR" value="${env.COMPONENT_DIR}" description="Moodle component directory, EG: mod/forum"/>
    <property name="DB" value="${env.DB}" description="The Moodle DB driver to use: mysqli or pgsql only"/>
    <property name="TRAVIS_BUILD_DIR" value="${env.TRAVIS_BUILD_DIR}" description="This is where Travis cloned the plugin"/>
    <resolvepath propertyName="BUILD_DIR" file="${project.basedir}/.." description="Where everything is built, like Moodle"/>
    <property name="MOODLE_DIR" value="${BUILD_DIR}/moodle" description="Directory where Moodle is cloned to"/>
    <property name="MOODLE_COMPONENT_DIR" value="${BUILD_DIR}/moodle/${COMPONENT_DIR}" description="Absolute path to Moodle component director, EG: /path/to/mod/forum"/>
    <property name="MOODLE_DATA_DIR" value="${BUILD_DIR}/moodledata" description="Absolute path to Moodle data directory"/>
    <property name="MOODLE_PHPUNIT_DATA_DIR" value="${MOODLE_DATA_DIR}/phpu_moodledata" description="Absolute path to PHPUnit data directory"/>
    <property name="MOODLE_BEHAT_DATA_DIR" value="${MOODLE_DATA_DIR}/behat_moodledata" description="Absolute path to Behat data directory"/>
    <property name="MOODLE_CODE_CHECKER_VERSION" value="master"/>

    <!-- Used to determine if Moodle has already installed. -->
    <available property="MOODLE_EXISTS" file="${MOODLE_DIR}"/>

    <!-- Setup some properties based on the DB type. -->
    <if>
        <equals arg1="${DB}" arg2="pgsql"/>
        <then>
            <property name="DB.USER" value="postgres"/>
            <property name="DB.PASS" value=""/>
            <property name="DB.CREATE" value="psql -c 'CREATE DATABASE moodle;' -U postgres"/>
        </then>

        <elseif>
            <equals arg1="${DB}" arg2="mysqli"/>
            <then>
                <property name="DB.USER" value="root"/>
                <property name="DB.PASS" value=""/>
                <property name="DB.CREATE" value="mysql -e 'CREATE DATABASE moodle DEFAULT CHARACTER SET UTF8 COLLATE UTF8_bin;'"/>
            </then>
        </elseif>

        <else>
            <property name="UNKNOWN_DB" value="true"/>
        </else>
    </if>

    <target name="Install" description="Builds Moodle and detect dependencies to install" depends="ReportProperties">
        <phingcall target="InstallMoodle"/>

        <!-- Try to detect if plugin has Behat tests to run. -->
        <available property="BEHAT_ENABLED" file="${MOODLE_COMPONENT_DIR}/tests/behat"/>
        <!-- Note: this is a super weak test.  Looking for better ways. -->
        <available property="PHPUNIT_ENABLED" file="${MOODLE_COMPONENT_DIR}/tests"/>
        <if>
            <istrue value="${BEHAT_ENABLED}"/>
            <then>
                <phingcall target="BehatDependencies"/>
            </then>
        </if>
        <if>
            <istrue value="${PHPUNIT_ENABLED}"/>
            <then>
                <phingcall target="PHPUnitDependencies"/>
            </then>
        </if>
    </target>

    <target name="ForceInstall" description="Builds Moodle and installs all dependencies" depends="ReportProperties">
        <phingcall target="InstallMoodle"/>
        <phingcall target="BehatDependencies"/>
        <phingcall target="PHPUnitDependencies"/>
    </target>

    <target name="InstallBehatOnly" description="Build Moodle and install dependencies for Behat" depends="ReportProperties">
        <phingcall target="InstallMoodle"/>
        <phingcall target="BehatDependencies"/>
    </target>

    <target name="InstallPHPUnitOnly" description="Build Moodle and install dependencies for PHPUnit" depends="ReportProperties">
        <phingcall target="InstallMoodle"/>
        <phingcall target="PHPUnitDependencies"/>
    </target>

    <target name="ReportProperties" hidden="true">
        <!-- Helps with debugging. -->
        <echo message="MOODLE_BRANCH: ${MOODLE_BRANCH}"/>
        <echo message="COMPONENT_DIR: ${COMPONENT_DIR}"/>
        <echo message="TRAVIS_BUILD_DIR: ${TRAVIS_BUILD_DIR}"/>
        <echo message="BUILD_DIR: ${BUILD_DIR}"/>
        <echo message="DB: ${DB}"/>
        <echo message="DB.USER: ${DB.USER}"/>
        <echo message="DB.PASS: ${DB.PASS}"/>
        <echo message="MOODLE_DIR: ${MOODLE_DIR}"/>
        <echo message="MOODLE_COMPONENT_DIR: ${MOODLE_COMPONENT_DIR}"/>
        <echo message="MOODLE_DATA_DIR: ${MOODLE_DATA_DIR}"/>
        <echo message="MOODLE_PHPUNIT_DATA_DIR: ${MOODLE_PHPUNIT_DATA_DIR}"/>
        <echo message="MOODLE_BEHAT_DATA_DIR: ${MOODLE_BEHAT_DATA_DIR}"/>
    </target>

    <target name="InstallMoodle" hidden="true">
        <!-- Unknown DB or already installed Moodle can fail the build. -->
        <fail if="UNKNOWN_DB" message="Unsupported ${DB} used, only supports mysqli and pgsql"/>
        <fail if="MOODLE_EXISTS" message="Moodle has already been installed at ${MOODLE_DIR}"/>

        <!-- Clone Moodle. -->
        <echo message="Cloning Moodle"/>
        <exec command="git clone --depth=1 --branch ${MOODLE_BRANCH} git://github.com/moodle/moodle ${MOODLE_DIR}" passthru="true" checkreturn="true" level="info"/>

        <!-- Create data directories -->
        <echo message="Creating Moodle's data directory"/>
        <mkdir dir="${MOODLE_DATA_DIR}" mode="777"/>
        <mkdir dir="${MOODLE_PHPUNIT_DATA_DIR}" mode="777"/>
        <mkdir dir="${MOODLE_BEHAT_DATA_DIR}" mode="777"/>

        <!-- Build Moodle config file. -->
        <echo message="Creating Moodle's config file"/>
        <copy file="${project.basedir}/res/template/config.php.txt" tofile="${MOODLE_DIR}/config.php">
            <filterchain>
                <replacetokens begintoken="{{" endtoken="}}">
                    <token key="DBTYPE" value="${DB}"/>
                    <token key="DBLIBRARY" value="native"/>
                    <token key="DBHOST" value="localhost"/>
                    <token key="DBNAME" value="moodle"/>
                    <token key="DBUSER" value="${DB.USER}"/>
                    <token key="DBPASS" value="${DB.PASS}"/>
                    <token key="WWWROOT" value="http://localhost/moodle"/>
                    <token key="DATAROOT" value="${MOODLE_DATA_DIR}"/>
                    <token key="PHPUNITDATAROOT" value="${MOODLE_PHPUNIT_DATA_DIR}"/>
                    <token key="BEHATDATAROOT" value="${MOODLE_BEHAT_DATA_DIR}"/>
                    <token key="BEHATWWWROOT" value="http://localhost:8000"/>
                </replacetokens>
            </filterchain>
        </copy>

        <!-- Copy the plugin into Moodle. -->
        <echo message="Copying plugin into Moodle"/>
        <copy todir="${MOODLE_COMPONENT_DIR}">
            <fileset dir="${TRAVIS_BUILD_DIR}"/>
        </copy>

        <!-- Install Code Checker. -->
        <gitclone repository="git://github.com/moodlehq/moodle-local_codechecker.git" targetPath="${MOODLE_DIR}/local/codechecker"/>
        <gitcheckout repository="${MOODLE_DIR}/local/codechecker" create="true" branchname="working" startpoint="${MOODLE_CODE_CHECKER_VERSION}"/>

        <!-- Create Moodle database. -->
        <echo message="Creating database for Moodle"/>
        <exec command="${DB.CREATE}" passthru="true" level="info" checkreturn="true"/>
    </target>

    <target name="BehatDependencies" hidden="true">
        <!-- Download Selenium and start it. -->
        <echo message="Downloading Selenium JAR file"/>
        <exec command="curl -o ${project.basedir}/selenium.jar http://selenium-release.storage.googleapis.com/2.45/selenium-server-standalone-2.45.0.jar" passthru="true" level="info" checkreturn="true"/>
        <echo message="Starting Selenium server"/>
        <exec command="${project.basedir}/bin/start_selenium ${project.basedir}/selenium.jar" passthru="true" level="info" checkreturn="true"/>

        <!-- Start PhantomJS. -->
        <echo message="Starting PhantomJS"/>
        <exec command="${project.basedir}/bin/start_phantomjs" passthru="true" level="info" checkreturn="true"/>

        <!-- Start PHP server. -->
        <echo message="Starting PHP server"/>
        <exec command="${project.basedir}/bin/start_phpserver" dir="${MOODLE_DIR}" passthru="true" level="info" checkreturn="true"/>

        <!-- Initialize Behat. -->
        <echo message="Initialize Behat in Moodle"/>
        <exec command="php ${MOODLE_DIR}/admin/tool/behat/cli/init.php" passthru="true" level="info" checkreturn="true"/>

        <!-- This is a flag to let us know that Behat is ready to run. -->
        <touch file="${MOODLE_DIR}/BEHAT_READY"/>
    </target>

    <target name="PHPUnitDependencies" hidden="true">
        <echo message="Initialize PHPUnit in Moodle"/>
        <exec command="php ${MOODLE_DIR}/admin/tool/phpunit/cli/init.php" passthru="true" level="info" checkreturn="true"/>

        <!-- This is a flag to let us know that PHPUnit is ready to run. -->
        <touch file="${MOODLE_DIR}/PHPUNIT_READY"/>
    </target>
</project>
